/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Merkle, MerkleInterface } from "../Merkle";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "data",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "node",
        type: "uint256",
      },
    ],
    name: "getProof",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "data",
        type: "bytes32[]",
      },
    ],
    name: "getRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "right",
        type: "bytes32",
      },
    ],
    name: "hashLeafPairs",
    outputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "log2ceil",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "log2ceilBitMagic",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "valueToProve",
        type: "bytes32",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e81806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632e08d6021461006757806358161a4214610097578063b8616195146100c7578063cf06c7b7146100f7578063dd1d259914610127578063e27d515314610157575b600080fd5b610081600480360381019061007c9190610934565b610187565b60405161008e919061098c565b60405180910390f35b6100b160048036038101906100ac91906109a7565b61020b565b6040516100be9190610a31565b60405180910390f35b6100e160048036038101906100dc9190610a82565b610262565b6040516100ee9190610b9c565b60405180910390f35b610111600480360381019061010c9190610bbe565b6103fe565b60405161011e9190610bfa565b60405180910390f35b610141600480360381019061013c9190610c15565b610572565b60405161014e919061098c565b60405180910390f35b610171600480360381019061016c9190610bbe565b6105a3565b60405161017e9190610bfa565b60405180910390f35b600060018251116101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c490610cd8565b60405180910390fd5b5b6001825111156101e8576101e1826105e4565b91506101ce565b816000815181106101fc576101fb610cf8565b5b60200260200101519050919050565b60008082905060008451905060005b81811015610253576102468387838151811061023957610238610cf8565b5b6020026020010151610572565b925080600101905061021a565b50818614925050509392505050565b606060018351116102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029f90610d99565b60405180910390fd5b60006102b484516103fe565b67ffffffffffffffff8111156102cd576102cc6107bb565b5b6040519080825280602002602001820160405280156102fb5781602001602082028036833780820191505090505b50905060005b6001855111156103f3576001808516036103575784600185038151811061032b5761032a610cf8565b5b602002602001015182828151811061034657610345610cf8565b5b6020026020010181815250506103c9565b8451600185010361038a576000801b82828151811061037957610378610cf8565b5b6020026020010181815250506103c8565b8460018501815181106103a05761039f610cf8565b5b60200260200101518282815181106103bb576103ba610cf8565b5b6020026020010181815250505b5b806001019050600284816103e0576103df610db9565b5b0493506103ec856105e4565b9450610301565b819250505092915050565b600060018211610411576000905061056d565b600080839050700100000000000000000000000000000000841061044657608084901c93506080826104439190610e17565b91505b68010000000000000000841061046d57604084901c935060408261046a9190610e17565b91505b640100000000841061049057602084901c935060208261048d9190610e17565b91505b6201000084106104b157601084901c93506010826104ae9190610e17565b91505b61010084106104d157600884901c93506008826104ce9190610e17565b91505b601084106104f057600484901c93506004826104ed9190610e17565b91505b6004841061050f57600284901c935060028261050c9190610e17565b91505b60028410610527576001826105249190610e17565b91505b600081600183196105389190610e17565b169050818114801561054a5750600083115b1561055a5782935050505061056d565b6001836105679190610e17565b93505050505b919050565b60008183106000811461058c578360005282602052610595565b82600052836020525b506040600020905092915050565b60008060009050600083846001861901161490505b60008411156105d557600184901c935081806001019250506105b8565b80820391508192505050919050565b6060806000835190506001808216036106a85760016002828161060a57610609610db9565b5b040167ffffffffffffffff811115610625576106246107bb565b5b6040519080825280602002602001820160405280156106535781602001602082028036833780820191505090505b50915061068084600183038151811061066f5761066e610cf8565b5b60200260200101516000801b610572565b8260018451038151811061069757610696610cf8565b5b602002602001018181525050610705565b600281816106b9576106b8610db9565b5b0467ffffffffffffffff8111156106d3576106d26107bb565b5b6040519080825280602002602001820160405280156107015781602001602082028036833780820191505090505b5091505b6000805b600183038110156107855761075586828151811061072a57610729610cf8565b5b602002602001015187600184018151811061074857610747610cf8565b5b6020026020010151610572565b84838151811061076857610767610cf8565b5b602002602001018181525050816001019150600281019050610709565b50505080915050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107f3826107aa565b810181811067ffffffffffffffff82111715610812576108116107bb565b5b80604052505050565b6000610825610791565b905061083182826107ea565b919050565b600067ffffffffffffffff821115610851576108506107bb565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61087a81610867565b811461088557600080fd5b50565b60008135905061089781610871565b92915050565b60006108b06108ab84610836565b61081b565b905080838252602082019050602084028301858111156108d3576108d2610862565b5b835b818110156108fc57806108e88882610888565b8452602084019350506020810190506108d5565b5050509392505050565b600082601f83011261091b5761091a6107a5565b5b813561092b84826020860161089d565b91505092915050565b60006020828403121561094a5761094961079b565b5b600082013567ffffffffffffffff811115610968576109676107a0565b5b61097484828501610906565b91505092915050565b61098681610867565b82525050565b60006020820190506109a1600083018461097d565b92915050565b6000806000606084860312156109c0576109bf61079b565b5b60006109ce86828701610888565b935050602084013567ffffffffffffffff8111156109ef576109ee6107a0565b5b6109fb86828701610906565b9250506040610a0c86828701610888565b9150509250925092565b60008115159050919050565b610a2b81610a16565b82525050565b6000602082019050610a466000830184610a22565b92915050565b6000819050919050565b610a5f81610a4c565b8114610a6a57600080fd5b50565b600081359050610a7c81610a56565b92915050565b60008060408385031215610a9957610a9861079b565b5b600083013567ffffffffffffffff811115610ab757610ab66107a0565b5b610ac385828601610906565b9250506020610ad485828601610a6d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b1381610867565b82525050565b6000610b258383610b0a565b60208301905092915050565b6000602082019050919050565b6000610b4982610ade565b610b538185610ae9565b9350610b5e83610afa565b8060005b83811015610b8f578151610b768882610b19565b9750610b8183610b31565b925050600181019050610b62565b5085935050505092915050565b60006020820190508181036000830152610bb68184610b3e565b905092915050565b600060208284031215610bd457610bd361079b565b5b6000610be284828501610a6d565b91505092915050565b610bf481610a4c565b82525050565b6000602082019050610c0f6000830184610beb565b92915050565b60008060408385031215610c2c57610c2b61079b565b5b6000610c3a85828601610888565b9250506020610c4b85828601610888565b9150509250929050565b600082825260208201905092915050565b7f776f6e27742067656e657261746520726f6f7420666f722073696e676c65206c60008201527f6561660000000000000000000000000000000000000000000000000000000000602082015250565b6000610cc2602383610c55565b9150610ccd82610c66565b604082019050919050565b60006020820190508181036000830152610cf181610cb5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f776f6e27742067656e65726174652070726f6f6620666f722073696e676c652060008201527f6c65616600000000000000000000000000000000000000000000000000000000602082015250565b6000610d83602483610c55565b9150610d8e82610d27565b604082019050919050565b60006020820190508181036000830152610db281610d76565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2282610a4c565b9150610e2d83610a4c565b9250828201905080821115610e4557610e44610de8565b5b9291505056fea2646970667358221220af95a4436254007d06d6edbe7a481995775e9b70d14cfb76c750b2250bcadea564736f6c63430008110033";

export class Merkle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Merkle> {
    return super.deploy(overrides || {}) as Promise<Merkle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Merkle {
    return super.attach(address) as Merkle;
  }
  connect(signer: Signer): Merkle__factory {
    return super.connect(signer) as Merkle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleInterface {
    return new utils.Interface(_abi) as MerkleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Merkle {
    return new Contract(address, _abi, signerOrProvider) as Merkle;
  }
}
