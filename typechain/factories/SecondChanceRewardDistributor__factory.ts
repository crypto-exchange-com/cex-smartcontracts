/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SecondChanceRewardDistributor,
  SecondChanceRewardDistributorInterface,
} from "../SecondChanceRewardDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "reciever",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardWithdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "ReleaseDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RewardAmountClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "releaseDate",
        type: "uint256",
      },
    ],
    name: "setReleaseDate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006002553480156200001657600080fd5b50604051620018be380380620018be83398181016040528101906200003c9190620001e4565b60016000819055506200006462000058620000ac60201b60201c565b620000b460201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000216565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ac826200017f565b9050919050565b620001be816200019f565b8114620001ca57600080fd5b50565b600081519050620001de81620001b3565b92915050565b600060208284031215620001fd57620001fc6200017a565b5b60006200020d84828501620001cd565b91505092915050565b61169880620002266000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638cf49cad116100665780638cf49cad1461011f5780638da5cb5b1461013d578063cb4d65031461015b578063f1e9f1e51461018b578063f2fde38b146101a95761009e565b80631352faec146100a35780632eb4a7ab146100bf57806336317972146100dd578063715018a6146100f95780637cb6475914610103575b600080fd5b6100bd60048036038101906100b89190610c4c565b6101c5565b005b6100c761028d565b6040516100d49190610c92565b60405180910390f35b6100f760048036038101906100f29190610d12565b610293565b005b610101610828565b005b61011d60048036038101906101189190610d9e565b6108b0565b005b610127610936565b6040516101349190610dda565b60405180910390f35b61014561093c565b6040516101529190610e36565b60405180910390f35b61017560048036038101906101709190610e7d565b610966565b6040516101829190610dda565b60405180910390f35b61019361097e565b6040516101a09190610f09565b60405180910390f35b6101c360048036038101906101be9190610e7d565b6109a4565b005b6101cd610a9b565b73ffffffffffffffffffffffffffffffffffffffff166101eb61093c565b73ffffffffffffffffffffffffffffffffffffffff1614610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890610f81565b60405180910390fd5b428111610283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027a90611013565b60405180910390fd5b8060048190555050565b60025481565b6002600054036102d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cf9061107f565b60405180910390fd5b600260008190555082600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161033c9190610e36565b602060405180830381865afa158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d91906110b4565b10156103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b59061112d565b60405180910390fd5b600060025403610403576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fa90611199565b60405180910390fd5b600061040d610a9b565b8460405160200161041f929190611222565b604051602081830303815290604052805190602001209050610485838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060025483610aa3565b6104c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bb9061129a565b60405180910390fd5b83600560006104d1610a9b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541061054c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054390611306565b60405180910390fd5b600060045414158015610560575042600454105b61059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059690611372565b60405180910390fd5b6000600454426105af91906113c1565b9050600062278d00826105c29190611424565b9050600060128211156105d457601291505b601282036105e457869050610668565b60005b828110156106665760008114806105fe5750600181145b1561062e57600a6064896106129190611424565b61061c9190611455565b826106279190611497565b9150610655565b600560648961063d9190611424565b6106479190611455565b826106529190611497565b91505b8061065f906114cb565b90506105e7565b505b60056000610674610a9b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816106ba91906113c1565b90506000811180156106cc5750868111155b156108175780600560006106de610a9b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107279190611497565b92505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610774610a9b565b836040518363ffffffff1660e01b8152600401610792929190611513565b6020604051808303816000875af11580156107b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d59190611574565b507f6553897c25961cd3a105492c25576d0552123ee868aca283e90f3b4224d7d1776107ff610a9b565b8260405161080e929190611513565b60405180910390a15b505050506001600081905550505050565b610830610a9b565b73ffffffffffffffffffffffffffffffffffffffff1661084e61093c565b73ffffffffffffffffffffffffffffffffffffffff16146108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089b90610f81565b60405180910390fd5b6108ae6000610aba565b565b6108b8610a9b565b73ffffffffffffffffffffffffffffffffffffffff166108d661093c565b73ffffffffffffffffffffffffffffffffffffffff161461092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390610f81565b60405180910390fd5b8060028190555050565b60045481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60056020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109ac610a9b565b73ffffffffffffffffffffffffffffffffffffffff166109ca61093c565b73ffffffffffffffffffffffffffffffffffffffff1614610a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1790610f81565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8690611613565b60405180910390fd5b610a9881610aba565b50565b600033905090565b600082610ab08584610b80565b1490509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008082905060005b8451811015610bea576000858281518110610ba757610ba6611633565b5b60200260200101519050808311610bc957610bc28382610bf5565b9250610bd6565b610bd38184610bf5565b92505b508080610be2906114cb565b915050610b89565b508091505092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b6000819050919050565b610c2981610c16565b8114610c3457600080fd5b50565b600081359050610c4681610c20565b92915050565b600060208284031215610c6257610c61610c0c565b5b6000610c7084828501610c37565b91505092915050565b6000819050919050565b610c8c81610c79565b82525050565b6000602082019050610ca76000830184610c83565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610cd257610cd1610cad565b5b8235905067ffffffffffffffff811115610cef57610cee610cb2565b5b602083019150836020820283011115610d0b57610d0a610cb7565b5b9250929050565b600080600060408486031215610d2b57610d2a610c0c565b5b6000610d3986828701610c37565b935050602084013567ffffffffffffffff811115610d5a57610d59610c11565b5b610d6686828701610cbc565b92509250509250925092565b610d7b81610c79565b8114610d8657600080fd5b50565b600081359050610d9881610d72565b92915050565b600060208284031215610db457610db3610c0c565b5b6000610dc284828501610d89565b91505092915050565b610dd481610c16565b82525050565b6000602082019050610def6000830184610dcb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2082610df5565b9050919050565b610e3081610e15565b82525050565b6000602082019050610e4b6000830184610e27565b92915050565b610e5a81610e15565b8114610e6557600080fd5b50565b600081359050610e7781610e51565b92915050565b600060208284031215610e9357610e92610c0c565b5b6000610ea184828501610e68565b91505092915050565b6000819050919050565b6000610ecf610eca610ec584610df5565b610eaa565b610df5565b9050919050565b6000610ee182610eb4565b9050919050565b6000610ef382610ed6565b9050919050565b610f0381610ee8565b82525050565b6000602082019050610f1e6000830184610efa565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f6b602083610f24565b9150610f7682610f35565b602082019050919050565b60006020820190508181036000830152610f9a81610f5e565b9050919050565b7f52656c6561736520646174652068617320746f20626520696e2074686520667560008201527f7475726500000000000000000000000000000000000000000000000000000000602082015250565b6000610ffd602483610f24565b915061100882610fa1565b604082019050919050565b6000602082019050818103600083015261102c81610ff0565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611069601f83610f24565b915061107482611033565b602082019050919050565b600060208201905081810360008301526110988161105c565b9050919050565b6000815190506110ae81610c20565b92915050565b6000602082840312156110ca576110c9610c0c565b5b60006110d88482850161109f565b91505092915050565b7f4e6f7420656e6f7567682066756e6473206c6566740000000000000000000000600082015250565b6000611117601583610f24565b9150611122826110e1565b602082019050919050565b600060208201905081810360008301526111468161110a565b9050919050565b7f6d65726b6c6520726f6f74206e6f742073657400000000000000000000000000600082015250565b6000611183601383610f24565b915061118e8261114d565b602082019050919050565b600060208201905081810360008301526111b281611176565b9050919050565b60008160601b9050919050565b60006111d1826111b9565b9050919050565b60006111e3826111c6565b9050919050565b6111fb6111f682610e15565b6111d8565b82525050565b6000819050919050565b61121c61121782610c16565b611201565b82525050565b600061122e82856111ea565b60148201915061123e828461120b565b6020820191508190509392505050565b7f496e636f72726563742070726f6f660000000000000000000000000000000000600082015250565b6000611284600f83610f24565b915061128f8261124e565b602082019050919050565b600060208201905081810360008301526112b381611277565b9050919050565b7f546f74616c20616d6f756e7420616c726561647920636c61696d656400000000600082015250565b60006112f0601c83610f24565b91506112fb826112ba565b602082019050919050565b6000602082019050818103600083015261131f816112e3565b9050919050565b7f52656c6561736520686173206e6f742073746172746564207965742100000000600082015250565b600061135c601c83610f24565b915061136782611326565b602082019050919050565b6000602082019050818103600083015261138b8161134f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113cc82610c16565b91506113d783610c16565b92508282039050818111156113ef576113ee611392565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061142f82610c16565b915061143a83610c16565b92508261144a576114496113f5565b5b828204905092915050565b600061146082610c16565b915061146b83610c16565b925082820261147981610c16565b915082820484148315176114905761148f611392565b5b5092915050565b60006114a282610c16565b91506114ad83610c16565b92508282019050808211156114c5576114c4611392565b5b92915050565b60006114d682610c16565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361150857611507611392565b5b600182019050919050565b60006040820190506115286000830185610e27565b6115356020830184610dcb565b9392505050565b60008115159050919050565b6115518161153c565b811461155c57600080fd5b50565b60008151905061156e81611548565b92915050565b60006020828403121561158a57611589610c0c565b5b60006115988482850161155f565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115fd602683610f24565b9150611608826115a1565b604082019050919050565b6000602082019050818103600083015261162c816115f0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220ab718f1400c5d7300881071773da9e0bd40bf708ceb05f6ad1155af1d11b7df464736f6c63430008110033";

export class SecondChanceRewardDistributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SecondChanceRewardDistributor> {
    return super.deploy(
      token,
      overrides || {}
    ) as Promise<SecondChanceRewardDistributor>;
  }
  getDeployTransaction(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  attach(address: string): SecondChanceRewardDistributor {
    return super.attach(address) as SecondChanceRewardDistributor;
  }
  connect(signer: Signer): SecondChanceRewardDistributor__factory {
    return super.connect(signer) as SecondChanceRewardDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecondChanceRewardDistributorInterface {
    return new utils.Interface(_abi) as SecondChanceRewardDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SecondChanceRewardDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SecondChanceRewardDistributor;
  }
}
